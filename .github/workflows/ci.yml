# .github/workflows/go-ci.yml

name: Go CI/CD Pipeline

on:
  push:
    branches:
      - master
      - dev
      - ci-cd
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout код
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Установить нужную версию Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.4'

      # 3. Кэширование модулей Go
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # 4. Установка зависимостей
      - name: Install dependencies
        run: go mod download

      # 5. Проверка форматирования кода
      - name: Run go fmt
        run: go fmt ./...

      # 6. Статический анализ кода
      - name: Run go vet
        run: go vet ./...

      - name: Run staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck ./...

      # 7. Запуск тестов с покрытием
      - name: Run tests
        run: |
          go test ./... -v -coverprofile=coverage.out -covermode=atomic

      # 8. Сохранение артефактов покрытия
      - name: Upload coverage to artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage.out

      # 9. Сборка приложения
      - name: Build
        run: go build -v -o chaika-goods ./cmd

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build

    steps:
      # 1. Checkout код
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Установить нужную версию Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.4'

      # 3. Установить SonarQube Scanner
      - name: Install SonarQube Scanner
        run: |
          curl -sL https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip -o sonar-scanner.zip
          unzip sonar-scanner.zip -d $HOME
          mv $HOME/sonar-scanner-4.8.0.2856-linux $HOME/sonar-scanner
          echo "PATH=$HOME/sonar-scanner/bin:$PATH" >> $GITHUB_ENV

      # 4. Запуск анализа SonarQube
      - name: SonarQube Scan
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=ChaikaGoods \
            -Dsonar.sources=./internal \
            -Dsonar.exclusions=**/tests/**,**/*.mock.go \
            -Dsonar.go.coverage.reportPaths=coverage.out \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
  
