basePath: /
definitions:
  schemas.AddTemplateRequest:
    description: Запрос на добавление шаблона
    properties:
      template:
        allOf:
        - $ref: '#/definitions/schemas.TemplateSchema'
        description: Сведения о новом шаблоне
    type: object
  schemas.AddTemplateResponse:
    description: Ответ на запрос на добавление шаблона
    properties:
      id:
        description: ID созданного шаблона
        type: integer
    type: object
  schemas.CreateProductRequest:
    description: Запрос на добавление продукта
    properties:
      product:
        $ref: '#/definitions/schemas.ProductSchema'
    type: object
  schemas.CreateProductResponse:
    description: Ответ на запрос на добавление продукта
    properties:
      id:
        type: integer
    type: object
  schemas.DeleteProductResponse:
    description: Ответ на запрос на удаление продукта
    type: object
  schemas.ErrorResponse:
    properties:
      code:
        description: Код ошибки
        type: integer
      message:
        description: Сообщение об ошибке
        type: string
    type: object
  schemas.GetAllProductsResponse:
    description: Ответ на запрос на получение всех продуктов
    properties:
      products:
        items:
          $ref: '#/definitions/schemas.ProductSchema'
        type: array
    type: object
  schemas.GetProductByIDResponse:
    description: Ответ на запрос на получение продукта по его ID
    properties:
      product:
        $ref: '#/definitions/schemas.ProductSchema'
    type: object
  schemas.GetTemplateByIDResponse:
    description: Ответ на запрос на получение шаблона по его ID
    properties:
      template:
        $ref: '#/definitions/schemas.TemplateSchema'
    type: object
  schemas.ProductSchema:
    properties:
      description:
        type: string
      id:
        type: integer
      imageurl:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  schemas.SearchTemplatesResponse:
    description: Ответ на запрос на поиск шаблонов
    properties:
      templates:
        items:
          $ref: '#/definitions/schemas.TemplateSchema'
        type: array
    type: object
  schemas.TemplateContentSchema:
    properties:
      productID:
        type: integer
      quantity:
        type: integer
    type: object
  schemas.TemplateSchema:
    properties:
      content:
        items:
          $ref: '#/definitions/schemas.TemplateContentSchema'
        type: array
      description:
        type: string
      id:
        type: integer
      templateName:
        type: string
    type: object
  schemas.UpdateProductRequest:
    description: Запрос на обновление продукта
    properties:
      product:
        $ref: '#/definitions/schemas.ProductSchema'
    type: object
  schemas.UpdateProductResponse:
    description: Ответ на запрос на обновление продукта
    type: object
host: chaika-soft.ru
info:
  contact:
    email: chaika.contact@yandex.ru
    name: Chaika
  description: This is a simple API to manage goods for the Chaika app.
  license:
    name: GPL v3
    url: https://www.gnu.de/documents/gpl.en.html
  title: ChaikaGoods API
  version: 1.1.2
paths:
  /api/v1/product:
    get:
      consumes:
      - application/json
      description: Get all products with pagination
      parameters:
        - description: Max number of items
          in: query
          name: limit
          required: true
          type: integer
        - description: Offset from start
          in: query
          name: offset
          required: true
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.GetAllProductsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Get all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Add a new product to the database
      parameters:
      - description: Product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/schemas.CreateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.CreateProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Add product
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update product details in the database
      parameters:
      - description: Product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/schemas.UpdateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.UpdateProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Update product
      tags:
      - products
  /api/v1/product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product from the database
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.DeleteProductResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Delete product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Get product details by its ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.GetProductByIDResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Get product by ID
      tags:
      - products
  /api/v1/product/template:
    post:
      consumes:
      - application/json
      description: Add a new Template of products to the database
      parameters:
      - description: Template details
        in: body
        name: Template
        required: true
        schema:
          $ref: '#/definitions/schemas.AddTemplateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.AddTemplateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Add Template
      tags:
      - Templates
  /api/v1/product/template/{id}:
    get:
      consumes:
      - application/json
      description: Get Template details by its ID
      parameters:
      - description: Template ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.GetTemplateByIDResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Get Template by ID
      tags:
      - Templates
  /api/v1/product/template/search:
    get:
      consumes:
      - application/json
      description: Search for Templates
      parameters:
      - description: Search query
        in: query
        name: query
        type: string
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemas.SearchTemplatesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemas.ErrorResponse'
      summary: Search Template
      tags:
      - Templates
produces:
- application/json
schemes:
- https
swagger: "2.0"
